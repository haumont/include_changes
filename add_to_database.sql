CREATE OR REPLACE PROCEDURE MYLIB/ADD_TO_DATABASE (IN IFS_PATH VARCHAR(255), IN DB_FILE VARCHAR(255))
LANGUAGE SQL
MODIFIES SQL DATA
BEGIN
    DECLARE BASE_PATH VARCHAR(255);
    DECLARE FULL_PATH VARCHAR(255);
    DECLARE FILE_EXT VARCHAR(2);
    DECLARE C_FILES CURSOR FOR
        SELECT BASENAME(IFS_PATH) || '/' || NAME AS FULL_PATH, EXTNAME(IFS_PATH) AS FILE_EXT
        FROM QSYS2.FILE_SYSTEM AS FS
        WHERE FS.PATH_NAME LIKE IFS_PATH || '%'
        AND (FS.FILE_TYPE = 'STMF' OR FS.FILE_TYPE = 'DIR')
        AND (EXTNAME(IFS_PATH) IN ('C', 'c', 'H', 'h', 'A') OR EXTNAME(IFS_PATH) = 'CC');
    DECLARE CONTINUE HANDLER FOR NOT FOUND
        SET @finished = 1;
    DECLARE @finished INT DEFAULT 0;
    
    SET BASE_PATH = REPLACE(IFS_PATH, '/', '.');
    
    EXEC SQL
        DECLARE C_FILES_DB CURSOR FOR
        SELECT KEY_FIELD, VALUE_FIELD
        FROM MYLIB/CC_FILES
        WHERE FILE_TYPE = 'C/C++'
        AND BASE_PATH = :BASE_PATH
        FOR UPDATE OF KEY_FIELD;
        
    OPEN C_FILES;
    FETCH C_FILES INTO FULL_PATH, FILE_EXT;
    
    WHILE (@finished = 0) DO
        IF (FILE_EXT IN ('C', 'c', 'H', 'h', 'A') OR FILE_EXT = 'CC') THEN
            EXEC SQL
                SELECT COUNT(*)
                INTO :COUNT_FILES
                FROM MYLIB/CC_FILES
                WHERE KEY_FIELD = :FULL_PATH;
                
            IF (COUNT_FILES = 0) THEN
                EXEC SQL
                    INSERT INTO MYLIB/CC_FILES (KEY_FIELD, VALUE_FIELD, FILE_TYPE, BASE_PATH)
                    VALUES (:FULL_PATH, :FULL_PATH, 'C/C++', :BASE_PATH);
            END IF;
        END IF;
        FETCH C_FILES INTO FULL_PATH, FILE_EXT;
    END WHILE;
    
    CLOSE C_FILES;
    CLOSE C_FILES_DB;
END;
